{"ast":null,"code":"/*\nConic gradients are not supported in all browsers (https://caniuse.com/#feat=css-conic-gradients), so this pen includes the CSS conic-gradient() polyfill by Lea Verou (https://leaverou.github.io/conic-gradient/)\n*/\n// Find al rating items\nconst ratings = document.querySelectorAll(\".rating\"); // Iterate over all rating items\n\nratings.forEach(rating => {\n  // Get content and get score as an int\n  const ratingContent = rating.innerHTML;\n  const ratingScore = parseInt(ratingContent, 10); // Define if the score is good, meh or bad according to its value\n\n  const scoreClass = ratingScore < 40 ? \"bad\" : ratingScore < 60 ? \"meh\" : \"good\"; // Add score class to the rating\n\n  rating.classList.add(scoreClass); // After adding the class, get its color\n\n  const ratingColor = window.getComputedStyle(rating).backgroundColor; // Define the background gradient according to the score and color\n\n  const gradient = `background: conic-gradient(${ratingColor} ${ratingScore}%, transparent 0 100%)`; // Set the gradient as the rating background\n\n  rating.setAttribute(\"style\", gradient); // Wrap the content in a tag to show it above the pseudo element that masks the bar\n\n  rating.innerHTML = `<span>${ratingScore} ${ratingContent.indexOf(\"%\") >= 0 ? \"<small>%</small>\" : \"\"}</span>`;\n});","map":{"version":3,"names":["ratings","document","querySelectorAll","forEach","rating","ratingContent","innerHTML","ratingScore","parseInt","scoreClass","classList","add","ratingColor","window","getComputedStyle","backgroundColor","gradient","setAttribute","indexOf"],"sources":["/Users/rasmusmoller/Desktop/games/src/others/rating.js"],"sourcesContent":["/*\nConic gradients are not supported in all browsers (https://caniuse.com/#feat=css-conic-gradients), so this pen includes the CSS conic-gradient() polyfill by Lea Verou (https://leaverou.github.io/conic-gradient/)\n*/\n\n// Find al rating items\nconst ratings = document.querySelectorAll(\".rating\");\n\n// Iterate over all rating items\nratings.forEach((rating) => {\n  // Get content and get score as an int\n  const ratingContent = rating.innerHTML;\n  const ratingScore = parseInt(ratingContent, 10);\n\n  // Define if the score is good, meh or bad according to its value\n  const scoreClass =\n    ratingScore < 40 ? \"bad\" : ratingScore < 60 ? \"meh\" : \"good\";\n\n  // Add score class to the rating\n  rating.classList.add(scoreClass);\n\n  // After adding the class, get its color\n  const ratingColor = window.getComputedStyle(rating).backgroundColor;\n\n  // Define the background gradient according to the score and color\n  const gradient = `background: conic-gradient(${ratingColor} ${ratingScore}%, transparent 0 100%)`;\n\n  // Set the gradient as the rating background\n  rating.setAttribute(\"style\", gradient);\n\n  // Wrap the content in a tag to show it above the pseudo element that masks the bar\n  rating.innerHTML = `<span>${ratingScore} ${\n    ratingContent.indexOf(\"%\") >= 0 ? \"<small>%</small>\" : \"\"\n  }</span>`;\n});\n"],"mappings":"AAAA;AACA;AACA;AAEA;AACA,MAAMA,OAAO,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,CAAhB,C,CAEA;;AACAF,OAAO,CAACG,OAAR,CAAiBC,MAAD,IAAY;EAC1B;EACA,MAAMC,aAAa,GAAGD,MAAM,CAACE,SAA7B;EACA,MAAMC,WAAW,GAAGC,QAAQ,CAACH,aAAD,EAAgB,EAAhB,CAA5B,CAH0B,CAK1B;;EACA,MAAMI,UAAU,GACdF,WAAW,GAAG,EAAd,GAAmB,KAAnB,GAA2BA,WAAW,GAAG,EAAd,GAAmB,KAAnB,GAA2B,MADxD,CAN0B,CAS1B;;EACAH,MAAM,CAACM,SAAP,CAAiBC,GAAjB,CAAqBF,UAArB,EAV0B,CAY1B;;EACA,MAAMG,WAAW,GAAGC,MAAM,CAACC,gBAAP,CAAwBV,MAAxB,EAAgCW,eAApD,CAb0B,CAe1B;;EACA,MAAMC,QAAQ,GAAI,8BAA6BJ,WAAY,IAAGL,WAAY,wBAA1E,CAhB0B,CAkB1B;;EACAH,MAAM,CAACa,YAAP,CAAoB,OAApB,EAA6BD,QAA7B,EAnB0B,CAqB1B;;EACAZ,MAAM,CAACE,SAAP,GAAoB,SAAQC,WAAY,IACtCF,aAAa,CAACa,OAAd,CAAsB,GAAtB,KAA8B,CAA9B,GAAkC,kBAAlC,GAAuD,EACxD,SAFD;AAGD,CAzBD"},"metadata":{},"sourceType":"module"}